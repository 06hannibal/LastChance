<?php

/**
 * @file
 * Functions to support theming in the Adminimal theme.
 */

use Drupal\Core\Link;
use Drupal\Component\Serialization\Json;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function lastchance_theme_preprocess_html(&$variables) {

  // Add adminimal class to the body.
  $variables['attributes']['class'][] = 'adminimal';

}

/**
 * Implements hook_preprocess_page() for HTML document templates.
 */
function lastchance_theme_preprocess_page(&$variables){

  $anonymous = \Drupal::currentUser()->isAnonymous();

  $currdata = date('H');

  if($anonymous==true) {
    \Drupal::service('page_cache_kill_switch')->trigger();
  }

  switch ($currdata) {

    case $currdata==0 || $currdata<=4:
      $variables['night'] ='page-night';
      break;

    case $currdata==5 || $currdata<=10:
      $variables['morning'] ='page-morning';
      break;

    case $currdata==11 || $currdata<=16:
      $variables['day'] ='page-day';
      break;

    case $currdata==17 || $currdata<=23:
      $variables['evening'] ='page-evening';
      break;
  }
}

/**
 * Implements hook_preprocess_menu__account() for HTML document templates.
 */
function lastchance_theme_preprocess_menu__account(&$variables) {

  $uid = \Drupal::currentUser()->id();
  $name = \Drupal::currentUser()->getAccountName();

  $link_login = 'Log in/Registration';

  $link_logout = 'Log out';

  $login_form = Url::fromRoute('registration_menu.menu');
  $login_form->setOptions([
    'attributes' => [
      'class' => ['use-ajax', 'url'],
      'data-dialog-type' => 'modal',
      'data-dialog-options' => Json::encode([
        'title' => t('Registration Menu'),
        'width' => 400,
        'height' => 400,
      ]),
    ],
  ]);

  $login_off = Url::fromRoute('user.logout');

  if(empty($uid)) {
    $variables['login'] = Link::fromTextAndUrl(t($link_login), $login_form)->toString();
  } else {
    $variables['Logout'] = Link::fromTextAndUrl(t($link_logout), $login_off)->toString();
    $variables['name'] = Link::createFromRoute($name, 'entity.user.canonical', ['user' => $uid,]);
  }

}